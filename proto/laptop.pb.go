// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: proto/laptop.proto

package grpc_fundamental

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Memory_Unit int32

const (
	Memory_UNKNOWN  Memory_Unit = 0
	Memory_BIT      Memory_Unit = 1
	Memory_BYTE     Memory_Unit = 2
	Memory_KILOBYTE Memory_Unit = 3
	Memory_MEGABYTE Memory_Unit = 4
	Memory_GIGABYTE Memory_Unit = 5
)

// Enum value maps for Memory_Unit.
var (
	Memory_Unit_name = map[int32]string{
		0: "UNKNOWN",
		1: "BIT",
		2: "BYTE",
		3: "KILOBYTE",
		4: "MEGABYTE",
		5: "GIGABYTE",
	}
	Memory_Unit_value = map[string]int32{
		"UNKNOWN":  0,
		"BIT":      1,
		"BYTE":     2,
		"KILOBYTE": 3,
		"MEGABYTE": 4,
		"GIGABYTE": 5,
	}
)

func (x Memory_Unit) Enum() *Memory_Unit {
	p := new(Memory_Unit)
	*p = x
	return p
}

func (x Memory_Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Memory_Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_laptop_proto_enumTypes[0].Descriptor()
}

func (Memory_Unit) Type() protoreflect.EnumType {
	return &file_proto_laptop_proto_enumTypes[0]
}

func (x Memory_Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Memory_Unit.Descriptor instead.
func (Memory_Unit) EnumDescriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{2, 0}
}

type Storage_Driver int32

const (
	Storage_UNKNOWN Storage_Driver = 0
	Storage_HDD     Storage_Driver = 1
	Storage_SSD     Storage_Driver = 2
)

// Enum value maps for Storage_Driver.
var (
	Storage_Driver_name = map[int32]string{
		0: "UNKNOWN",
		1: "HDD",
		2: "SSD",
	}
	Storage_Driver_value = map[string]int32{
		"UNKNOWN": 0,
		"HDD":     1,
		"SSD":     2,
	}
)

func (x Storage_Driver) Enum() *Storage_Driver {
	p := new(Storage_Driver)
	*p = x
	return p
}

func (x Storage_Driver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Storage_Driver) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_laptop_proto_enumTypes[1].Descriptor()
}

func (Storage_Driver) Type() protoreflect.EnumType {
	return &file_proto_laptop_proto_enumTypes[1]
}

func (x Storage_Driver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Storage_Driver.Descriptor instead.
func (Storage_Driver) EnumDescriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{3, 0}
}

type Screen_Panel int32

const (
	Screen_UNKNOWN Screen_Panel = 0
	Screen_TN      Screen_Panel = 1
	Screen_IPS     Screen_Panel = 2
	Screen_VA      Screen_Panel = 3
)

// Enum value maps for Screen_Panel.
var (
	Screen_Panel_name = map[int32]string{
		0: "UNKNOWN",
		1: "TN",
		2: "IPS",
		3: "VA",
	}
	Screen_Panel_value = map[string]int32{
		"UNKNOWN": 0,
		"TN":      1,
		"IPS":     2,
		"VA":      3,
	}
)

func (x Screen_Panel) Enum() *Screen_Panel {
	p := new(Screen_Panel)
	*p = x
	return p
}

func (x Screen_Panel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Screen_Panel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_laptop_proto_enumTypes[2].Descriptor()
}

func (Screen_Panel) Type() protoreflect.EnumType {
	return &file_proto_laptop_proto_enumTypes[2]
}

func (x Screen_Panel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Screen_Panel.Descriptor instead.
func (Screen_Panel) EnumDescriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{4, 0}
}

type Cpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand      string `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NumCores   uint32 `protobuf:"varint,3,opt,name=num_cores,json=numCores,proto3" json:"num_cores,omitempty"`
	NumThreads uint32 `protobuf:"varint,4,opt,name=num_threads,json=numThreads,proto3" json:"num_threads,omitempty"`
	MaxFreq    uint32 `protobuf:"varint,5,opt,name=max_freq,json=maxFreq,proto3" json:"max_freq,omitempty"`
	MinFreq    uint32 `protobuf:"varint,6,opt,name=min_freq,json=minFreq,proto3" json:"min_freq,omitempty"`
}

func (x *Cpu) Reset() {
	*x = Cpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_laptop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cpu) ProtoMessage() {}

func (x *Cpu) ProtoReflect() protoreflect.Message {
	mi := &file_proto_laptop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cpu.ProtoReflect.Descriptor instead.
func (*Cpu) Descriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{0}
}

func (x *Cpu) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Cpu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cpu) GetNumCores() uint32 {
	if x != nil {
		return x.NumCores
	}
	return 0
}

func (x *Cpu) GetNumThreads() uint32 {
	if x != nil {
		return x.NumThreads
	}
	return 0
}

func (x *Cpu) GetMaxFreq() uint32 {
	if x != nil {
		return x.MaxFreq
	}
	return 0
}

func (x *Cpu) GetMinFreq() uint32 {
	if x != nil {
		return x.MinFreq
	}
	return 0
}

type Gpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand   string  `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Name    string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MaxFreq uint32  `protobuf:"varint,5,opt,name=max_freq,json=maxFreq,proto3" json:"max_freq,omitempty"`
	MinFreq uint32  `protobuf:"varint,6,opt,name=min_freq,json=minFreq,proto3" json:"min_freq,omitempty"`
	Memory  *Memory `protobuf:"bytes,7,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *Gpu) Reset() {
	*x = Gpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_laptop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gpu) ProtoMessage() {}

func (x *Gpu) ProtoReflect() protoreflect.Message {
	mi := &file_proto_laptop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gpu.ProtoReflect.Descriptor instead.
func (*Gpu) Descriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{1}
}

func (x *Gpu) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Gpu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Gpu) GetMaxFreq() uint32 {
	if x != nil {
		return x.MaxFreq
	}
	return 0
}

func (x *Gpu) GetMinFreq() uint32 {
	if x != nil {
		return x.MinFreq
	}
	return 0
}

func (x *Gpu) GetMemory() *Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

type Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64      `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Unit  Memory_Unit `protobuf:"varint,2,opt,name=unit,proto3,enum=main.Memory_Unit" json:"unit,omitempty"`
}

func (x *Memory) Reset() {
	*x = Memory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_laptop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_laptop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{2}
}

func (x *Memory) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Memory) GetUnit() Memory_Unit {
	if x != nil {
		return x.Unit
	}
	return Memory_UNKNOWN
}

type Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver Storage_Driver `protobuf:"varint,1,opt,name=driver,proto3,enum=main.Storage_Driver" json:"driver,omitempty"`
	Memory *Memory        `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *Storage) Reset() {
	*x = Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_laptop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_laptop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{3}
}

func (x *Storage) GetDriver() Storage_Driver {
	if x != nil {
		return x.Driver
	}
	return Storage_UNKNOWN
}

func (x *Storage) GetMemory() *Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

type Screen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeInch   float32            `protobuf:"fixed32,1,opt,name=size_inch,json=sizeInch,proto3" json:"size_inch,omitempty"`
	Resolution *Screen_Resolution `protobuf:"bytes,2,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Panel      Screen_Panel       `protobuf:"varint,3,opt,name=panel,proto3,enum=main.Screen_Panel" json:"panel,omitempty"`
	Touch      bool               `protobuf:"varint,4,opt,name=touch,proto3" json:"touch,omitempty"`
}

func (x *Screen) Reset() {
	*x = Screen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_laptop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Screen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Screen) ProtoMessage() {}

func (x *Screen) ProtoReflect() protoreflect.Message {
	mi := &file_proto_laptop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Screen.ProtoReflect.Descriptor instead.
func (*Screen) Descriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{4}
}

func (x *Screen) GetSizeInch() float32 {
	if x != nil {
		return x.SizeInch
	}
	return 0
}

func (x *Screen) GetResolution() *Screen_Resolution {
	if x != nil {
		return x.Resolution
	}
	return nil
}

func (x *Screen) GetPanel() Screen_Panel {
	if x != nil {
		return x.Panel
	}
	return Screen_UNKNOWN
}

func (x *Screen) GetTouch() bool {
	if x != nil {
		return x.Touch
	}
	return false
}

type Laptop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Brand   string     `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Name    string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Cpu     *Cpu       `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Gpu     *Gpu       `protobuf:"bytes,5,opt,name=gpu,proto3" json:"gpu,omitempty"`
	Storage []*Storage `protobuf:"bytes,6,rep,name=storage,proto3" json:"storage,omitempty"`
	Screen  *Screen    `protobuf:"bytes,7,opt,name=screen,proto3" json:"screen,omitempty"`
	Ram     uint32     `protobuf:"varint,8,opt,name=ram,proto3" json:"ram,omitempty"`
	// Types that are assignable to Weight:
	//
	//	*Laptop_WeightKg
	//	*Laptop_WeightLbs
	Weight isLaptop_Weight `protobuf_oneof:"weight"`
	// Types that are assignable to Price:
	//
	//	*Laptop_PriceUsd
	//	*Laptop_PriceEur
	Price         isLaptop_Price         `protobuf_oneof:"price"`
	RelaseDate    *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=relase_date,json=relaseDate,proto3" json:"relase_date,omitempty"`
	HasCamera     bool                   `protobuf:"varint,14,opt,name=has_camera,json=hasCamera,proto3" json:"has_camera,omitempty"`
	HasMicrophone bool                   `protobuf:"varint,15,opt,name=has_microphone,json=hasMicrophone,proto3" json:"has_microphone,omitempty"`
}

func (x *Laptop) Reset() {
	*x = Laptop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_laptop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Laptop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Laptop) ProtoMessage() {}

func (x *Laptop) ProtoReflect() protoreflect.Message {
	mi := &file_proto_laptop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Laptop.ProtoReflect.Descriptor instead.
func (*Laptop) Descriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{5}
}

func (x *Laptop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Laptop) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Laptop) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Laptop) GetCpu() *Cpu {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *Laptop) GetGpu() *Gpu {
	if x != nil {
		return x.Gpu
	}
	return nil
}

func (x *Laptop) GetStorage() []*Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *Laptop) GetScreen() *Screen {
	if x != nil {
		return x.Screen
	}
	return nil
}

func (x *Laptop) GetRam() uint32 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (m *Laptop) GetWeight() isLaptop_Weight {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (x *Laptop) GetWeightKg() float32 {
	if x, ok := x.GetWeight().(*Laptop_WeightKg); ok {
		return x.WeightKg
	}
	return 0
}

func (x *Laptop) GetWeightLbs() float32 {
	if x, ok := x.GetWeight().(*Laptop_WeightLbs); ok {
		return x.WeightLbs
	}
	return 0
}

func (m *Laptop) GetPrice() isLaptop_Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (x *Laptop) GetPriceUsd() uint32 {
	if x, ok := x.GetPrice().(*Laptop_PriceUsd); ok {
		return x.PriceUsd
	}
	return 0
}

func (x *Laptop) GetPriceEur() uint32 {
	if x, ok := x.GetPrice().(*Laptop_PriceEur); ok {
		return x.PriceEur
	}
	return 0
}

func (x *Laptop) GetRelaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RelaseDate
	}
	return nil
}

func (x *Laptop) GetHasCamera() bool {
	if x != nil {
		return x.HasCamera
	}
	return false
}

func (x *Laptop) GetHasMicrophone() bool {
	if x != nil {
		return x.HasMicrophone
	}
	return false
}

type isLaptop_Weight interface {
	isLaptop_Weight()
}

type Laptop_WeightKg struct {
	WeightKg float32 `protobuf:"fixed32,9,opt,name=weight_kg,json=weightKg,proto3,oneof"`
}

type Laptop_WeightLbs struct {
	WeightLbs float32 `protobuf:"fixed32,10,opt,name=weight_lbs,json=weightLbs,proto3,oneof"`
}

func (*Laptop_WeightKg) isLaptop_Weight() {}

func (*Laptop_WeightLbs) isLaptop_Weight() {}

type isLaptop_Price interface {
	isLaptop_Price()
}

type Laptop_PriceUsd struct {
	PriceUsd uint32 `protobuf:"varint,11,opt,name=price_usd,json=priceUsd,proto3,oneof"`
}

type Laptop_PriceEur struct {
	PriceEur uint32 `protobuf:"varint,12,opt,name=price_eur,json=priceEur,proto3,oneof"`
}

func (*Laptop_PriceUsd) isLaptop_Price() {}

func (*Laptop_PriceEur) isLaptop_Price() {}

type CreateLaptopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Laptop *Laptop `protobuf:"bytes,1,opt,name=laptop,proto3" json:"laptop,omitempty"`
}

func (x *CreateLaptopRequest) Reset() {
	*x = CreateLaptopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_laptop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLaptopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLaptopRequest) ProtoMessage() {}

func (x *CreateLaptopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_laptop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLaptopRequest.ProtoReflect.Descriptor instead.
func (*CreateLaptopRequest) Descriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{6}
}

func (x *CreateLaptopRequest) GetLaptop() *Laptop {
	if x != nil {
		return x.Laptop
	}
	return nil
}

type CreateLaptopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateLaptopResponse) Reset() {
	*x = CreateLaptopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_laptop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLaptopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLaptopResponse) ProtoMessage() {}

func (x *CreateLaptopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_laptop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLaptopResponse.ProtoReflect.Descriptor instead.
func (*CreateLaptopResponse) Descriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{7}
}

func (x *CreateLaptopResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Screen_Resolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  uint32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Screen_Resolution) Reset() {
	*x = Screen_Resolution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_laptop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Screen_Resolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Screen_Resolution) ProtoMessage() {}

func (x *Screen_Resolution) ProtoReflect() protoreflect.Message {
	mi := &file_proto_laptop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Screen_Resolution.ProtoReflect.Descriptor instead.
func (*Screen_Resolution) Descriptor() ([]byte, []int) {
	return file_proto_laptop_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Screen_Resolution) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Screen_Resolution) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_proto_laptop_proto protoreflect.FileDescriptor

var file_proto_laptop_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x03,
	0x43, 0x70, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75,
	0x6d, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6e, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x72,
	0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x46, 0x72, 0x65,
	0x71, 0x22, 0x8b, 0x01, 0x0a, 0x03, 0x47, 0x70, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x69, 0x6e, 0x46, 0x72, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22,
	0x97, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x50, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x49, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x59, 0x54, 0x45, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x4b, 0x49, 0x4c, 0x4f, 0x42, 0x59, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x4d, 0x45, 0x47, 0x41, 0x42, 0x59, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x47,
	0x49, 0x47, 0x41, 0x42, 0x59, 0x54, 0x45, 0x10, 0x05, 0x22, 0x86, 0x01, 0x0a, 0x07, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x27, 0x0a, 0x06, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x48, 0x44, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53, 0x44,
	0x10, 0x02, 0x22, 0x89, 0x02, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x69, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x73, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x63, 0x68, 0x12, 0x37, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x2e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x05, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x6f,
	0x75, 0x63, 0x68, 0x1a, 0x3a, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x2d, 0x0a, 0x05, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x50, 0x53, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x41, 0x10, 0x03, 0x22, 0xf1,
	0x03, 0x0a, 0x06, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x70, 0x75, 0x52, 0x03, 0x63, 0x70, 0x75,
	0x12, 0x1b, 0x0a, 0x03, 0x67, 0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x70, 0x75, 0x52, 0x03, 0x67, 0x70, 0x75, 0x12, 0x27, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x52, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x61, 0x6d, 0x12, 0x1d,
	0x0a, 0x09, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6b, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x00, 0x52, 0x08, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4b, 0x67, 0x12, 0x1f, 0x0a,
	0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x62, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x00, 0x52, 0x09, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x62, 0x73, 0x12, 0x1d,
	0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x1d, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x75, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x45, 0x75, 0x72, 0x12, 0x3b, 0x0a, 0x0b,
	0x72, 0x65, 0x6c, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72,
	0x65, 0x6c, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73,
	0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68,
	0x61, 0x73, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x68, 0x61, 0x73, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x3b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x70, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x6c, 0x61, 0x70,
	0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x52, 0x06, 0x6c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x22,
	0x26, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x58, 0x0a, 0x0d, 0x4c, 0x61, 0x70, 0x74, 0x6f,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x66, 0x75, 0x6e, 0x64,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_laptop_proto_rawDescOnce sync.Once
	file_proto_laptop_proto_rawDescData = file_proto_laptop_proto_rawDesc
)

func file_proto_laptop_proto_rawDescGZIP() []byte {
	file_proto_laptop_proto_rawDescOnce.Do(func() {
		file_proto_laptop_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_laptop_proto_rawDescData)
	})
	return file_proto_laptop_proto_rawDescData
}

var file_proto_laptop_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_laptop_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_laptop_proto_goTypes = []interface{}{
	(Memory_Unit)(0),              // 0: main.Memory.Unit
	(Storage_Driver)(0),           // 1: main.Storage.Driver
	(Screen_Panel)(0),             // 2: main.Screen.Panel
	(*Cpu)(nil),                   // 3: main.Cpu
	(*Gpu)(nil),                   // 4: main.Gpu
	(*Memory)(nil),                // 5: main.Memory
	(*Storage)(nil),               // 6: main.Storage
	(*Screen)(nil),                // 7: main.Screen
	(*Laptop)(nil),                // 8: main.Laptop
	(*CreateLaptopRequest)(nil),   // 9: main.CreateLaptopRequest
	(*CreateLaptopResponse)(nil),  // 10: main.CreateLaptopResponse
	(*Screen_Resolution)(nil),     // 11: main.Screen.Resolution
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_proto_laptop_proto_depIdxs = []int32{
	5,  // 0: main.Gpu.memory:type_name -> main.Memory
	0,  // 1: main.Memory.unit:type_name -> main.Memory.Unit
	1,  // 2: main.Storage.driver:type_name -> main.Storage.Driver
	5,  // 3: main.Storage.memory:type_name -> main.Memory
	11, // 4: main.Screen.resolution:type_name -> main.Screen.Resolution
	2,  // 5: main.Screen.panel:type_name -> main.Screen.Panel
	3,  // 6: main.Laptop.cpu:type_name -> main.Cpu
	4,  // 7: main.Laptop.gpu:type_name -> main.Gpu
	6,  // 8: main.Laptop.storage:type_name -> main.Storage
	7,  // 9: main.Laptop.screen:type_name -> main.Screen
	12, // 10: main.Laptop.relase_date:type_name -> google.protobuf.Timestamp
	8,  // 11: main.CreateLaptopRequest.laptop:type_name -> main.Laptop
	9,  // 12: main.LaptopService.CreateLaptop:input_type -> main.CreateLaptopRequest
	10, // 13: main.LaptopService.CreateLaptop:output_type -> main.CreateLaptopResponse
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_laptop_proto_init() }
func file_proto_laptop_proto_init() {
	if File_proto_laptop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_laptop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_laptop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_laptop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Memory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_laptop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_laptop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Screen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_laptop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Laptop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_laptop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLaptopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_laptop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLaptopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_laptop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Screen_Resolution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_laptop_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Laptop_WeightKg)(nil),
		(*Laptop_WeightLbs)(nil),
		(*Laptop_PriceUsd)(nil),
		(*Laptop_PriceEur)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_laptop_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_laptop_proto_goTypes,
		DependencyIndexes: file_proto_laptop_proto_depIdxs,
		EnumInfos:         file_proto_laptop_proto_enumTypes,
		MessageInfos:      file_proto_laptop_proto_msgTypes,
	}.Build()
	File_proto_laptop_proto = out.File
	file_proto_laptop_proto_rawDesc = nil
	file_proto_laptop_proto_goTypes = nil
	file_proto_laptop_proto_depIdxs = nil
}
